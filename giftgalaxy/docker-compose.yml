version: '4.34.2'

services:
  # MySQL container
  mysql:
    image: mysql:8
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: giftgalaxydb
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 5

  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # RabbitMQ communication port
      - "15672:15672"  # Web management interface port
    networks:
      - app-network

  auth-service:
    image: authentication-service:latest
    container_name: auth-service
    build:
      context: ./authenticationservice
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/auth_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_started  # Ensure RabbitMQ is up
      mysql:
        condition: service_healthy  # Wait for MySQL health check to pass

  profile-service:
    image: profile-service:latest
    container_name: profile-service
    build:
      context: ./profileservice
    ports:
      - "8081:8081"
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/profile_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    networks:
      - app-network
    depends_on:
      auth-service:
        condition: service_started  # Ensure auth-service is up
      rabbitmq:
        condition: service_started
      mysql:
        condition: service_healthy  # Wait for MySQL health check to pass

  notification-service:
    image: notification-service:latest
    container_name: notification-service
    build:
      context: ./notificationservice
    ports:
      - "8082:8082"
    environment:
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/notification_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    networks:
      - app-network
    depends_on:
      profile-service:
        condition: service_started  # Ensure profile-service is up first
      mysql:
        condition: service_healthy  # Wait for MySQL health check to pass
  
  giftsuggestionservice:
    image: giftsuggestionservice:latest
    container_name: giftsuggestionservice
    build:
      context: ./giftsuggestionservice
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/gift_suggestion_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
    networks:
      - app-network
    depends_on:
      notification-service:
        condition: service_started  # Ensure notification-service is up first
      rabbitmq:
        condition: service_started
      mysql:
        condition: service_healthy  # Wait for MySQL health check to pass

        
  frontend:
    image: frontend-app:latest
    container_name: frontend
    build:
      context: ./frontend/login-signup
    ports:
      - "3000:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
